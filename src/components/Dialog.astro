---
import CloseDialog from "../assets/close-dialog.astro";
import Separator from "./Separator.astro";
interface Props {
  title: string;
  imgurl: string;
  uniqueId: string;
}
const { uniqueId, imgurl, title } = Astro.props;
---

<dialog id={`favDialog-${uniqueId}`} class="md:w-[60%] rounded-xl border-2 border-border-color bg-[#111111] overflow-auto">
  <section id={`dialogContent-${uniqueId}`}>
    <div class="flex flex-col justify-center w-full px-5">
          <div class="flex md:gap-2 items-center w-full pt-5 text-4xl font-black text-center">
            <Separator />
            <button id={`closeDialog-${uniqueId}`}><CloseDialog /></button>
        </div>
        <slot />
    </div> 
  </section>
</dialog>
<button id={`openDialog-${uniqueId}`}>Ver Detalles</button>
<script is:inline>
  (function () {
    window.addEventListener("load", function () {
      var uniqueIds = ["1", "2"];

      uniqueIds.forEach(function (uniqueId) {
        var openButton = document.getElementById(`openDialog-${uniqueId}`);
        var favDialog = document.getElementById(`favDialog-${uniqueId}`);
        if (openButton !== null) {
          openButton.addEventListener("click", function () {
            favDialog && favDialog.showModal();
            document.documentElement.style.overflow = "hidden";
          });
        }
      });
    });
    window.addEventListener("load", function () {
      var uniqueIds = ["1", "2"];

      uniqueIds.forEach(function (uniqueId) {
        var closeButton = document.getElementById(`closeDialog-${uniqueId}`);
        var favDialog = document.getElementById(`favDialog-${uniqueId}`);
        if (closeButton !== null) {
          closeButton.addEventListener("click", function () {
            favDialog && favDialog.close();
            document.documentElement.style.overflow = "auto";
          });
        }
      });
    });
    window.addEventListener("load", function () {
      var uniqueIds = ["1", "2"];

      uniqueIds.forEach(function (uniqueId) {
        var favDialog = document.getElementById(`favDialog-${uniqueId}`);
        var dialogContent = document.getElementById(
          `dialogContent-${uniqueId}`
        );

        // Close the dialog when the backdrop is clicked
        favDialog.addEventListener("click", function (event) {
          // Only close the dialog if the backdrop itself was clicked
          // and not something on top of it
          if (!dialogContent.contains(event.target)) {
            favDialog && favDialog.close();
            document.documentElement.style.overflow = "auto";
          }
        });
      });
    });
    window.addEventListener("load", function () {
      var uniqueIds = ["1", "2"];

      uniqueIds.forEach(function (uniqueId) {
        var favDialog = document.getElementById(`favDialog-${uniqueId}`);
        var dialogContent = document.getElementById(
          `dialogContent-${uniqueId}`
        );

        // Close the dialog when the backdrop is clicked
        favDialog.addEventListener("click", function (event) {
          // Only close the dialog if the backdrop itself was clicked
          // and not something on top of it
          if (!dialogContent.contains(event.target)) {
            favDialog && favDialog.close();
            // Enable scrolling on the body when the dialog is closed
            document.body.style.overflow = "auto";
          }
        });
      });
    });
  })();
</script>
<style>
  dialog::backdrop {
    background: rgba(0, 0, 0, 0.8);
    cursor: pointer;
  }
</style>
